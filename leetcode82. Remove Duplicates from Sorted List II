/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null) {
            return head;
        }
        ListNode temp1 = head;
        ListNode temp2 = head.next;
        ListNode backside = head;
        while(temp2 != null) {
            if(temp1.val == temp2.val) {
                temp2 = temp2.next;
            }
            else {
                if(head == temp1 && temp1.next != temp2) {
                    head = temp2;
                    temp1 = temp2;
                    temp2 = temp2.next;
                }
                else if(temp1.next != temp2) {
                    backside = head;
                    while(backside.next != temp1) {
                        backside = backside.next;
                    }
                    backside.next = temp2;
                    temp1 = backside; 
                }
                else {
                    temp1 = temp1.next;
                    temp2 = temp2.next;
                }
            }
        }
        if(temp2 == null && head == temp1 && temp1.next == null) {
            return head;
        }
        else if(temp2 == null && head == temp1) {
            return null;
        }
        else if(temp1.next != temp2) {
            backside = head;
            while(backside.next != temp1) {
                backside = backside.next;
            }
            backside.next = temp2;
        }
        return head;
    }
}
